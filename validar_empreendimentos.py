#!/usr/bin/env python3
"""
Script para validar se todos os empreendimentos est√£o sendo carregados
SEM consumir requisi√ß√µes da API do Sienge
"""

import os
import sys
from dotenv import load_dotenv

def configurar_ambiente():
    """Configura as vari√°veis de ambiente"""
    load_dotenv()
    
    required_vars = ['MOTHERDUCK_TOKEN']
    missing_vars = [var for var in required_vars if not os.environ.get(var)]
    
    if missing_vars:
        print(f"‚ùå Vari√°veis de ambiente faltando: {', '.join(missing_vars)}")
        return False
    
    print("‚úÖ Vari√°veis de ambiente configuradas")
    return True

def validar_empreendimentos():
    """Valida se todos os empreendimentos est√£o sendo carregados"""
    print("\nüîç VALIDANDO EMPREENDIMENTOS")
    print("=" * 60)
    
    try:
        from scripts.sienge_apis import obter_lista_empreendimentos_motherduck
        
        empreendimentos = obter_lista_empreendimentos_motherduck()
        
        print(f"üìä Empreendimentos carregados: {len(empreendimentos)}")
        
        # Listar todos os empreendimentos
        for i, emp in enumerate(empreendimentos, 1):
            print(f"   {i:2d}. {emp['nome']} (ID: {emp['id']})")
        
        # Verificar se temos os 8 esperados
        if len(empreendimentos) == 8:
            print(f"\n‚úÖ SUCESSO! Todos os 8 empreendimentos foram carregados")
            return True
        else:
            print(f"\n‚ö†Ô∏è ATEN√á√ÉO! Esperado 8 empreendimentos, encontrado {len(empreendimentos)}")
            return False
        
    except Exception as e:
        print(f"‚ùå Erro ao validar empreendimentos: {e}")
        return False

def validar_configuracao_requisicoes():
    """Valida a configura√ß√£o de requisi√ß√µes"""
    print("\nüîç VALIDANDO CONFIGURA√á√ÉO DE REQUISI√á√ïES")
    print("=" * 60)
    
    try:
        from scripts.sienge_apis import SiengeAPIClient
        
        # Criar cliente (sem fazer requisi√ß√µes)
        client = SiengeAPIClient()
        
        print(f"üìä Configura√ß√£o de requisi√ß√µes:")
        print(f"   ‚Ä¢ Limite di√°rio: {client.limite_diario}")
        print(f"   ‚Ä¢ Empreendimentos: {client.empreendimentos_count}")
        print(f"   ‚Ä¢ Requisi√ß√µes por execu√ß√£o: {client.requisicoes_por_execucao}")
        print(f"   ‚Ä¢ Execu√ß√µes poss√≠veis: {client.execucoes_possiveis}")
        
        # Verificar se a configura√ß√£o est√° correta
        if client.limite_diario == 40 and client.requisicoes_por_execucao == 16:
            print(f"\n‚úÖ SUCESSO! Configura√ß√£o de requisi√ß√µes est√° correta")
            print(f"   ‚Ä¢ 40 requisi√ß√µes di√°rias")
            print(f"   ‚Ä¢ 16 requisi√ß√µes por execu√ß√£o (8 empreendimentos √ó 2 APIs)")
            print(f"   ‚Ä¢ 2 execu√ß√µes poss√≠veis por dia")
            return True
        else:
            print(f"\n‚ö†Ô∏è ATEN√á√ÉO! Configura√ß√£o n√£o est√° como esperado")
            return False
        
    except Exception as e:
        print(f"‚ùå Erro ao validar configura√ß√£o: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üîç VALIDA√á√ÉO DAS MUDAN√áAS IMPLEMENTADAS")
    print("=" * 80)
    print("Este script N√ÉO consome requisi√ß√µes da API do Sienge")
    
    # 1. Configurar ambiente
    if not configurar_ambiente():
        sys.exit(1)
    
    # 2. Validar empreendimentos
    empreendimentos_ok = validar_empreendimentos()
    
    # 3. Validar configura√ß√£o de requisi√ß√µes
    config_ok = validar_configuracao_requisicoes()
    
    # 4. Resumo
    print(f"\nüìä RESUMO DA VALIDA√á√ÉO:")
    print("=" * 60)
    
    if empreendimentos_ok and config_ok:
        print("‚úÖ TODAS AS VALIDA√á√ïES PASSARAM!")
        print("üéØ Mudan√ßas implementadas com sucesso:")
        print("   ‚Ä¢ Todos os 8 empreendimentos s√£o carregados")
        print("   ‚Ä¢ Configura√ß√£o de requisi√ß√µes est√° correta")
        print("   ‚Ä¢ Sistema pronto para processar todos os empreendimentos")
        print("   ‚Ä¢ Delay de 5 minutos entre vendas realizadas e canceladas")
        print("   ‚Ä¢ Limite de 40 requisi√ß√µes di√°rias configurado")
    else:
        print("‚ùå ALGUMAS VALIDA√á√ïES FALHARAM!")
        if not empreendimentos_ok:
            print("   ‚Ä¢ Problema: Empreendimentos n√£o est√£o sendo carregados corretamente")
        if not config_ok:
            print("   ‚Ä¢ Problema: Configura√ß√£o de requisi√ß√µes n√£o est√° correta")
    
    print(f"\nüéØ PR√ìXIMOS PASSOS:")
    print("   1. Executar o sistema completo para testar com dados reais")
    print("   2. Monitorar o uso de requisi√ß√µes")
    print("   3. Verificar se todos os empreendimentos retornam dados")

if __name__ == "__main__":
    main()
